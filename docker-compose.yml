version: "3.8"
services:
  backend:
    image: "node:16"
    networks:
      - microservices-net
    depends_on:
      - database
    ports:
      - 3001:3001
    environment:
      HTTP_SERVER_PORT: 3001
      DB_HOST: "database"
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      ACCESS_TOKEN_PUBLIC_KEY: ${ACCESS_TOKEN_PUBLIC_KEY}
      ACCESS_TOKEN_PRIVATE_KEY: ${ACCESS_TOKEN_PRIVATE_KEY}
      REFRESH_TOKEN_PUBLIC_KEY: ${REFRESH_TOKEN_PUBLIC_KEY}
      REFRESH_TOKEN_PRIVATE_KEY: ${REFRESH_TOKEN_PRIVATE_KEY}
    volumes:
      - "./:/mnt"
    working_dir: "/mnt/backend"
    entrypoint: "/bin/bash -c"
    command:
      - |
        CI=true npm run dev || echo '`npm run dev` failed'
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - microservices-net
    depends_on:
      - backend
    ports:
      - 3002:3002
    volumes:
      - "./:/mnt"
    working_dir: "/mnt/frontend"
  fs_srv:
    image: "node:16"
    networks:
      - microservices-net
    depends_on:
      - backend
      - minio
    ports:
      - 3003:3003
    environment:
      HTTP_SERVER_PORT: 3003
      MINIO_ENDPOINT: "minio"
      MINIO_PORT: 9000
      MINIO_SSL: "false"
      MINIO_ACCESS_KEY: ${MINIO_USER}
      MINIO_SECRET_KEY: ${MINIO_PASSWORD}
      BUCKET_NAME: ${MINIO_BUCKET_NAME}
    volumes:
      - "./:/mnt"
    working_dir: "/mnt/fs_srv"
    entrypoint: "/bin/bash -c"
    command:
      - |
        CI=true npm run dev || echo '`npm run dev` failed'
  database:
    image: "postgres:12"
    networks:
      - microservices-net
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - vol-postgres:/data
  minio:
    hostname: "minio"
    image: "minio/minio:latest"
    networks:
      - microservices-net
    expose:
      - 9000
      - 9001
    ports:
      - 9000:9000
      - 9001:9001
    command: 
      server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    volumes:
      - vol-minio:/data
volumes:
  vol-postgres:
  vol-minio:
networks:
  microservices-net: 
    external: true
